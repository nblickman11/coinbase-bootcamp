import { HardhatRuntimeEnvironment } from 'hardhat/types';
import { DeployFunction } from 'hardhat-deploy/types';
import { ethers, deployments } from 'hardhat';

const func: DeployFunction = async function (hre: HardhatRuntimeEnvironment) {
    // hre is hard hat runtime enviorment
    const { deploy } = hre.deployments;
    // Import deployer from config file named accounts
    const { deployer } = await hre.getNamedAccounts();

    // Constants
    const VALUE_LOCKCED = hre.ethers.parseEther("0.01");
    const UNLOCK_TIME = 10000;

    // Use ethers to get timestamp information 
    const blockNumber = await ethers.provider.getBlockNumber();
    const lastBlockTimestamp = (await ethers.provider.getBlock(blockNumber))?.timestampe as number;

    await deploy("Lock", {
        from: deployer,
        args: [lastBlockTimestamp + UNLOCK_TIME],
        value: VALUE_LOCKCED.toString()
    })
}
export default func;

// Add tag so can be recognized in test file.
func.tags = ["DeployAll"];